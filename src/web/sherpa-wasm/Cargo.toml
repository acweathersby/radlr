[package]
name = "sherpa-wasm"
version = "1.0.0-beta1"
edition = "2021"
authors = ["Anthony Weathersby <acweathersby.codes@gmail.com>"]

[lib]
path ="./lib.rs"
crate-type = ["cdylib", "rlib"]

[dependencies]
js-sys = "0.3.63"

serde = { version = "1.0.163", features = ["derive"] }

serde-wasm-bindgen = "0.5.0"

wasm-bindgen = "0.2.86"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }


[dev-dependencies]
wasm-bindgen-test = "0.3.36"

[dependencies.sherpa_core]
path = "../../lib/sherpa-core"
features = [
  'wasm-target',
]

[dependencies.sherpa_rust_runtime]
path = "../../lib/sherpa-rust-runtime"


[dependencies.sherpa_bytecode]
path = "../../lib/sherpa-bytecode"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[dependencies.web-sys]
version = "0.3.63"
features = [
  'Document',
  'Element',
  'HtmlElement',
  'Node',
  'Window',
]