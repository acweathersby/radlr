<> block > chunk

<> chunk > [ (stat ";"?)* (laststat ";"?)? ]

<> stat >  varlist1 "=" explist1  |
          functioncall  |
          "do" block "end"  |
          "while" exp "do" block "end"  |
          "repeat" block "until" exp  |
          "if" exp "then" block ("elseif" exp "then" block )*  ("else" block)? "end"  |
          "for" Name "=" exp "," exp ("," exp)? "do" block "end"  |
          "for" namelist "in" explist1 "do" block "end"  |
          "function" funcname funcbody  |
          "local" "function" Name funcbody  |
          "local" namelist ("=" explist1)?

<> laststat > "return" explist1?  |  "break"

<> funcname > Name ("." Name)* (":" Name)?

<> varlist1 > var ("," var)?

<> var >  Name  |  functioncall "[" exp "]"  |  functioncall "." Name

<> namelist > Name ("," Name)*

<> explist1 > (exp ",")* exp

<> exp 
      >  "nil"  
      |  "false"  
      |  "true"  
      |  Number  
      |  String  
      |  "..."  
      |  function  
      |  functioncall  
      |  tableconstructor  
      |  exp binop{1} exp{1}
      |  unop{2} exp{2}

<> functioncall > ( var |  "(" exp ")"  ){0} args(*){1} |  functioncall ":" Name args 

<> args >  "(" explist1? ")"  |  tableconstructor  |  String

<> function > "function" funcbody{1}

<> funcbody > "(" parlist1? ")" block "end"

<> parlist1 > namelist ("," "...")?  |  "..."

<> tableconstructor > "{" fieldlist? "}"

<> fieldlist > field (fieldsep field)* fieldsep?

<> field 
  > "[" exp "]" "=" exp  
  |  Name "=" exp  
  |  exp

<> fieldsep 
  > ","  
  |  ";"

<> binop 
    > "+"  |  "-"  |  "*"  |  "/"  |  "^"  |  "%"  |  ".."  
    | "<"  |  "<="  |  ">"  |  ">="  |  "=="  |  "~="  
    | "and"  |  "or"

<> unop 
    > "-"  
    |  "!"  
    |  "#"

<> Number 
    > tk:( c:num+ )

<> Name 
    > tk:( c:id ( c:id | "-" | "_" | c:num )* )

<> String
    > tk:("\""  ( c:id | c:sp |  c:num | c:sym )(*)  "\"")
 