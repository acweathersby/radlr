IGNORE { c:sp c:nl }

IMPORT primitive as prim
IMPORT regex as re


<> annotated_symbol 
  
  > symbol^s [tk:reference^r? "?"^o?  precedence?^p ]!?

    :ast { t_AnnotatedSymbol, precedence:$p, symbol:$s, is_optional:bool($o), reference:str($r), tok  }


<> symbol

  > tk:( "\"" c:id(+) "\"" ) 

  :ast { t_TokenSymbol, val:$1 }

  | re::grammar_regex

  :ast { t_RegexSymbol, val:$1 }

<> nonterm_symbol 
  
  > prim::id

  :ast { t_NonTermSymbol, val:$1 }

<> precedence 

  > "{" tk:precedence_num? ( ":" tk:precedence_num? :ast u32($2) )? '}' 
    
    :ast { t_Precedence, sym_prec: u32($2), tok_prec: $3 }

  | "{" ( tk:precedence_num^prec ":" )? "kw" '}' 
  
    :ast { t_Precedence, sym_prec: u32($prec), is_keyword: true }

<> precedence_num > c:num(+)

<> reference > "^" prim::id