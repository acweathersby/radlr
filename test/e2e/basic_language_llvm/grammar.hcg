@IGNORE g:sp g:nl 

@EXPORT json as entry

@NAME llvm_language_test

<> json > 
        object                              f:ast { { t_Json, v: $1 } }
        | 
        array                               f:ast { { t_Json, v: $1 } }

<> array > \[  value(*\, )  \]              f:ast { { t_Array, entries: $2 } }

<> object > \{ key_value(*\, ) \}           f:ast { { t_Object, entries: $2 } }

<> key_value > str \: value              f:ast { { t_KeyVal, k:$1, v:$3 } }

<> value > num | bool | str | null | array | object

<> null > t:null                            f:ast { { t_Null } }

<> bool > 
    t:false                                 f:ast { { t_Bool, v:false } }
    |   
    t:true                                  f:ast { { t_Bool, v:true } }

<> str > tk:string                          f:ast { { t_Str, v:str($1) } }

<> num > tk:number                          f:ast { { t_Number, v:f64($1) } }

<> number > ( \+ | \- )? g:num(+) ( t:. g:num(+) )? ( ( \e | \E ) ( \+ | \i ) g:num(+) )?

<> string > t:" ( g:id | g:sym | g:num | g:sp | g:nl | escaped)(*) t:"

<> escaped > t:\ ( g:id | g:sym | g:num | g:sp | g:nl )
