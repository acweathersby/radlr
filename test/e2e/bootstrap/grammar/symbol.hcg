@NAME hc_symbol

@IGNORE g:sp g:nl


<> annotated_symbol > 
        
        symbol^s [unordered tk:reference?^r \? ?^o ]

            f:ast {{ t_AnnotatedSymbol, symbol:$s, is_optional:bool($o), reference:str($r), tok  }}
        
        | symbol


<> symbol >

        terminal

        | non_terminal

        | list

        | terminal_non_terminal

        | class


<> class >

        t:c: ( \num | \nl | \sp | \id | \sym | \any )
        
            f:ast { { t_Class, c_Symbol , c_Terminal, val:str($2),  tok } }
        

<> terminal_non_terminal >

        t:tk: non_terminal

             f:ast { { t_Production_Terminal , c_Symbol , c_Terminal, production:$2, tok } }


<> non_terminal > 

        tk:identifier_syms
        
             f:ast { { t_Production_Symbol , c_Symbol, name:str($1),   tok } }

        | tk:identifier_syms \:: tk:identifier_syms
        
             f:ast { { t_Production_Import_Symbol , c_Symbol , module:str($1), name:str($3), tok } } 


<> list >

        symbol \(+  terminal?  \)
        
            f:ast { { t_List_Production, c_Symbol, terminal_symbol:$3, symbols:$1, tok } }

        | symbol \(* terminal?  \)
        
            f:ast {{ t_List_Production, c_Symbol, terminal_symbol:$3, symbols:$1, tok, optional:true }}


<> terminal > 
    
        ( g:sym | g:num )(+) g:sp?

            f:ast { { t_Terminal , c_Symbol , c_Terminal, val:str($1),  tok } }

        | t:\ tk:defined_symbol
    
            f:ast { { t_Terminal , c_Symbol , c_Terminal, val:str($2),  tok } } 

        | t:*\ tk:defined_symbol g:sp?
    
            f:ast { { t_Terminal , c_Symbol , c_Terminal, val:str($2), exclusive:true,  tok } } 


<> defined_symbol > 

        ( g:id | g:sym | g:num )(+)


<> reference > 

        t:^ tk:identifier_syms


<> identifier > 

        tk:identifier_syms 


<> identifier_syms >  

        identifier_syms g:id

        | identifier_syms \_

        | identifier_syms \-

        | identifier_syms g:num      

        | \_ 

        | \- 

        | g:id